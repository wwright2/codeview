<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>bitset::bitset - C++ Reference</title>
<link rel="canonical" href="http://www.cplusplus.com/reference/bitset/bitset/bitset/">
<link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">
<link rel="stylesheet" type="text/css" href="/v321/main.css">
<script src="/v321/main.js" type="text/javascript"></script>
<script type='text/javascript'>
var googletag = googletag || {};
googletag.cmd = googletag.cmd || [];
(function() {
var gads = document.createElement('script');
gads.async = true;
gads.type = 'text/javascript';
var useSSL = 'https:' == document.location.protocol;
gads.src = (useSSL ? 'https:' : 'http:') + 
'//www.googletagservices.com/tag/js/gpt.js';
var node = document.getElementsByTagName('script')[0];
node.parentNode.insertBefore(gads, node);
})();
</script>

<script type='text/javascript'>
googletag.cmd.push(function() {
googletag.defineSlot('/32882001/L', [728, 90], 'div-gpt-ad-1427191279638-0').addService(googletag.pubads());
googletag.enableServices();
});
</script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="/" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="/reference/">Reference</a></li>
<li><a href="/reference/bitset/">&lt;bitset&gt;</a></li>
<li><a href="/reference/bitset/bitset/">bitset</a></li>
<li class="here">bitset</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support">
<div id='div-gpt-ad-1427191279638-0' style='width:728px; height:90px;'>
<script type='text/javascript'>
googletag.cmd.push(function() { googletag.display('div-gpt-ad-1427191279638-0'); });
</script>
</div>
</div>
<div id="I_content">
<div class="C_doc">
<div id="I_type">public member function</div>
<div id="I_file">&lt;bitset&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span><a href="/reference/bitset/bitset/">bitset</a>::bitset</h1>
<div class="C_prototype"><div class="C_SwitchCases">
<div title="C++98">
<table><tr class="odd"><th>default (1)</th><td><pre>bitset();</pre></td></tr><tr class="even"><th>integer value (2)</th><td><pre>bitset (unsigned long val);</pre></td></tr><tr class="odd"><th>string (3)</th><td><pre>template&lt;class charT, class traits, class Alloc&gt;  explicit bitset (const basic_string&lt;charT,traits,Alloc&gt;&amp; str,    typename basic_string&lt;charT,traits,Alloc&gt;::size_type pos = 0,    typename basic_string&lt;charT,traits,Alloc&gt;::size_type n =      basic_string&lt;charT,traits,Alloc&gt;::npos);</pre></td></tr></table></div>
<div title="C++11" class="off">
<table><tr class="even"><th>default (1)</th><td><pre>constexpr bitset() noexcept;</pre></td></tr><tr class="odd"><th>integer value (2)</th><td><pre>constexpr bitset (unsigned long long val) noexcept;</pre></td></tr><tr class="even"><th>string (3)</th><td><pre>template &lt;class charT, class traits, class Alloc&gt;  explicit bitset (const basic_string&lt;charT,traits,Alloc&gt;&amp; str,    typename basic_string&lt;charT,traits,Alloc&gt;::size_type pos = 0,    typename basic_string&lt;charT,traits,Alloc&gt;::size_type n =      basic_string&lt;charT,traits,Alloc&gt;::npos,    charT zero = charT('0'), charT one = charT('1'));</pre></td></tr><tr class="odd"><th>C-string (4)</th><td><pre>template &lt;class charT&gt;  explicit bitset (const charT* str,    typename basic_string&lt;charT&gt;::size_type n = basic_string&lt;charT&gt;::npos,    charT zero = charT('0'), charT one = charT('1'));</pre></td></tr></table></div>
</div>
</div><div id="I_description">Construct bitset</div>
<section id="description">
Constructs a <samp><a href="/bitset">bitset</a></samp> container object:<br>
<dl>
<dt>(1) default constructor</dt>
<dd>The object is initialized with zeros.</dd>
<dt>(2) initialization from integer value</dt>
<dd>Initializes the object with the bit values of <var>val</var>:<br>
</dd>
<dt>(3) initialization from string or (4) C-string</dt>
<dd>Uses the sequence of <i>zeros</i> and/or <i>ones</i> in <var>str</var> to initialize the first <var>n</var> bit positions of the constructed <samp>bitset</samp> object.<br>
</dl>
<br>
Note that <samp>bitset</samp> objects have a <i><a href="/bitset::size">fixed size</a></i> (determined by their class template argument) no matter the constructor used: Those bit positions not explicitly set by the constructor are initialized with a value of zero.<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>val</dt>
<dd>Integral value whose bits are copied to the bitset positions.<br>
- If the value representation of <var>val</var> is greater than the <i><a href="/bitset::size">bitset size</a></i>, only the least significant bits of <var>val</var> are taken into consideration.<br>
- If the value representation of <var>val</var> is less than the <i><a href="/bitset::size">bitset size</a></i>, the remaining bit positions are initialized to zero.<br>
</dd>
<dt>str</dt>
<dd>
<div class="C_SwitchCases">
<div title="C++98">
A <samp><a href="/basic_string">basic_string</a></samp> whose contents are used to initialize the <samp><a href="/bitset">bitset</a></samp>:<br>
The constructor parses the string reading at most <var>n</var> characters beginning at <var>pos</var>, interpreting the character values <code>'0'</code> and <code>'1'</code> as zero and one, respectively.<br>
Note that the least significant bit is represented by the last character read (not the first); Thus, the first bit position is read from the right-most character, and the following bits use the characters preceding this, from right to left.<br>
If this sequence is shorter than the <i><a href="/bitset::size">bitset size</a></i>, the remaining bit positions are initialized to zero.<br>
</div>
<div title="C++11">
A <samp><a href="/basic_string">basic_string</a></samp> or <i>C-string</i> whose contents are used to initialize the <samp><a href="/bitset">bitset</a></samp>:<br>
The constructor parses the string reading at most <var>n</var> characters (beginning at <var>pos</var> for <i>(3)</i>), interpreting the character values specified as arguments <var>zero</var> and <var>one</var> as zeros and ones, respectively.<br>
Note that the least significant bit is represented by the last character read (not the first); Thus, the first bit position is read from the right-most character, and the following bits use the characters preceding this, from right to left.<br>
If this sequence is shorter than the <i><a href="/bitset::size">bitset size</a></i>, the remaining bit positions are initialized to zero.<br>
</div>
</div>
</dd>
<dt>pos</dt>
<dd>First character in the <samp><a href="/basic_string">basic_string</a></samp> to be read and interpreted.<br>
If this is greater than the <i><a href="/basic_string::length">length</a></i> of <var>str</var>, an <samp><a href="/out_of_range">out_of_range</a></samp> exception is thrown.<br>
<dt>n</dt>
<dd>Number of characters to read. Any value greater than the <i><a href="/bitset::size">bitset size</a></i> (including <samp><a href="/basic_string::npos">npos</a></samp>) is equivalent to specifying exactly the <i><a href="/bitset::size">bitset size</a></i>.</dd>
<dt>zero, one</dt>
<dd>Character values to represent <i>zero</i> and <i>one</i>.</dd>
</dl>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br></code></pre></td>
<td class="source"><pre><code><cite>// constructing bitsets</cite>
<dfn>#include &lt;iostream&gt;       </dfn><cite>// std::cout</cite>
<dfn>#include &lt;string&gt;         </dfn><cite>// std::string</cite>
<dfn>#include &lt;bitset&gt;         </dfn><cite>// std::bitset</cite>

<var>int</var> main ()
{
  std::bitset&lt;16&gt; foo;
  std::bitset&lt;16&gt; bar (0xfa2);
  std::bitset&lt;16&gt; baz (std::string(<kbd>"0101111001"</kbd>));

  std::cout &lt;&lt; <kbd>"foo: "</kbd> &lt;&lt; foo &lt;&lt; <kbd>'\n'</kbd>;
  std::cout &lt;&lt; <kbd>"bar: "</kbd> &lt;&lt; bar &lt;&lt; <kbd>'\n'</kbd>;
  std::cout &lt;&lt; <kbd>"baz: "</kbd> &lt;&lt; baz &lt;&lt; <kbd>'\n'</kbd>;

  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>
foo: 0000000000000000
bar: 0000111110100010
baz: 0000000101111001
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="access">
<h3>Data races</h3>
Constructors <i>(3)</i> and <i>(4)</i> access the characters in <var>str</var>.<br>
</section>
<br>
<section id="exceptions">
<h3>Exception safety</h3>
Neither the <i>default constructor (1)</i> nor the <i>constructor from integer value (2)</i> throw exceptions.<br>
The other constructors cause no side effects in case an exception is thrown (strong guarantee).<br>
Throws <samp><a href="/out_of_range">out_of_range</a></samp> if <code>pos &gt; str.size()</code>.<br>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/bitset/bitset/set/"><b>bitset::set</b></a></dt><dd>Set bits <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/bitset/bitset/reset/"><b>bitset::reset</b></a></dt><dd>Reset bits <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/bitset/bitset/operator[]/"><b>bitset::operator[]</b></a></dt><dd>Access bit <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/bitset/bitset/operators/"><b>bitset operators</b></a></dt><dd>Bitset operators <span class="typ">(function)</span></dd></dl>
</section></div><div id="CH_bb"></div></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="/">C++</a></b></h3>
<ul>
<li class="folder info"><a href="/info/">Information</a></li>
<li class="folder doc"><a href="/doc/">Tutorials</a></li>
<li class="folder selected reference"><a href="/reference/">Reference</a></li>
<li class="folder articles"><a href="/articles/">Articles</a></li>
<li class="folder forum"><a href="/forum/">Forum</a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect" id="reference_box">
<h3><b><a href="/reference/">Reference</a></b></h3>
<ul>
<li class="C_Collapsable collapsed"><h4><a href="/reference/clibrary/">C library:</a></h4><ul>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cassert/"><span>&lt;cassert&gt; (assert.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cctype/"><span>&lt;cctype&gt; (ctype.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cerrno/"><span>&lt;cerrno&gt; (errno.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cfenv/"><span>&lt;cfenv&gt; (fenv.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cfloat/"><span>&lt;cfloat&gt; (float.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cinttypes/"><span>&lt;cinttypes&gt; (inttypes.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/ciso646/"><span>&lt;ciso646&gt; (iso646.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/climits/"><span>&lt;climits&gt; (limits.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/clocale/"><span>&lt;clocale&gt; (locale.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cmath/"><span>&lt;cmath&gt; (math.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/csetjmp/"><span>&lt;csetjmp&gt; (setjmp.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/csignal/"><span>&lt;csignal&gt; (signal.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstdarg/"><span>&lt;cstdarg&gt; (stdarg.h)</span></a></li>
<li class="cpp11 folder"><a href="/reference/cstdbool/"><span>&lt;cstdbool&gt; (stdbool.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstddef/"><span>&lt;cstddef&gt; (stddef.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cstdint/"><span>&lt;cstdint&gt; (stdint.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstdio/"><span>&lt;cstdio&gt; (stdio.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstdlib/"><span>&lt;cstdlib&gt; (stdlib.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstring/"><span>&lt;cstring&gt; (string.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/ctgmath/"><span>&lt;ctgmath&gt; (tgmath.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/ctime/"><span>&lt;ctime&gt; (time.h)</span></a></li>
<li class="cpp11 folder"><a href="/reference/cuchar/"><span>&lt;cuchar&gt; (uchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cwchar/"><span>&lt;cwchar&gt; (wchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cwctype/"><span>&lt;cwctype&gt; (wctype.h)</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/stl/">Containers:</a></h4><ul>
<li class="cpp11 folder"><a href="/reference/array/"><span>&lt;array&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/deque/"><span>&lt;deque&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/forward_list/"><span>&lt;forward_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/list/"><span>&lt;list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/map/"><span>&lt;map&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/queue/"><span>&lt;queue&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/set/"><span>&lt;set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/stack/"><span>&lt;stack&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/unordered_map/"><span>&lt;unordered_map&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/unordered_set/"><span>&lt;unordered_set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/vector/"><span>&lt;vector&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/iolibrary/">Input/Output:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="/reference/fstream/"><span>&lt;fstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iomanip/"><span>&lt;iomanip&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/ios/"><span>&lt;ios&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iosfwd/"><span>&lt;iosfwd&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iostream/"><span>&lt;iostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/istream/"><span>&lt;istream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/ostream/"><span>&lt;ostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/sstream/"><span>&lt;sstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/streambuf/"><span>&lt;streambuf&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/multithreading/">Multi-threading:</a></h4><ul>
<li class="cpp11 folder"><a href="/reference/atomic/"><span>&lt;atomic&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/condition_variable/"><span>&lt;condition_variable&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/future/"><span>&lt;future&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/mutex/"><span>&lt;mutex&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/thread/"><span>&lt;thread&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4><a href="/reference/std/">Other:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="/reference/algorithm/"><span>&lt;algorithm&gt;</span></a></li>
<li class="cpp98 cpp11 selected folder"><a href="/reference/bitset/"><span>&lt;bitset&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/chrono/"><span>&lt;chrono&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/codecvt/"><span>&lt;codecvt&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/complex/"><span>&lt;complex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/exception/"><span>&lt;exception&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/functional/"><span>&lt;functional&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/initializer_list/"><span>&lt;initializer_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iterator/"><span>&lt;iterator&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/limits/"><span>&lt;limits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/locale/"><span>&lt;locale&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/memory/"><span>&lt;memory&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/new/"><span>&lt;new&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/numeric/"><span>&lt;numeric&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/random/"><span>&lt;random&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/ratio/"><span>&lt;ratio&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/regex/"><span>&lt;regex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/stdexcept/"><span>&lt;stdexcept&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/string/"><span>&lt;string&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/system_error/"><span>&lt;system_error&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/tuple/"><span>&lt;tuple&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/typeindex/"><span>&lt;typeindex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/typeinfo/"><span>&lt;typeinfo&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/type_traits/"><span>&lt;type_traits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/utility/"><span>&lt;utility&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/valarray/"><span>&lt;valarray&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="bitset_box">
<h3><b><a href="/reference/bitset/">&lt;bitset&gt;</a></b></h3>
<ul>
<li class="cpp98 cpp11 selected folder"><a href="/reference/bitset/bitset/"><span>bitset</span></a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="bitset_box">
<h3><b><a href="/reference/bitset/bitset/">bitset</a></b></h3>
<ul>
<li class="cpp98 cpp11 selected"><a href="/reference/bitset/bitset/bitset/"><span>bitset::bitset</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/bitset/bitset/operators/"><span>bitset operators</span></a></li>
<li class="C_Collapsable"><h4>member classes:</h4><ul>
<li class="cpp98 cpp11"><a href="/reference/bitset/bitset/reference/"><span>bitset::reference</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>member functions:</h4><ul>
<li class="cpp11"><a href="/reference/bitset/bitset/all/"><span>bitset::all</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/bitset/bitset/any/"><span>bitset::any</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/bitset/bitset/count/"><span>bitset::count</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/bitset/bitset/flip/"><span>bitset::flip</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/bitset/bitset/none/"><span>bitset::none</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/bitset/bitset/operator[]/"><span>bitset::operator[]</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/bitset/bitset/reset/"><span>bitset::reset</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/bitset/bitset/set/"><span>bitset::set</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/bitset/bitset/size/"><span>bitset::size</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/bitset/bitset/test/"><span>bitset::test</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/bitset/bitset/to_string/"><span>bitset::to_string</span></a></li>
<li class="cpp11"><a href="/reference/bitset/bitset/to_ullong/"><span>bitset::to_ullong</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/bitset/bitset/to_ulong/"><span>bitset::to_ulong</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>non-member specializations:</h4><ul>
<li class="cpp11"><a href="/reference/bitset/bitset/hash/"><span>hash&lt;bitset&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="/">Home page</a> | <a href="/privacy.do">Privacy policy</a><br>&copy; cplusplus.com, 2000-2016 - All rights reserved - <i>v3.1</i><br><a href="/contact.do?referrer=www.cplusplus.com%2Freference%2Fbitset%2Fbitset%2Fbitset%2F">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
 onSession ( function(us) {
		el=document.getElementById('CH_bb'); el.innerHTML='';
		if (us.auth(4096)) {
			
			el.appendChild(btn('Edit Page','Edit Page','edit','/reference/edit.cgi?a=bitset+bitset+bitset'));
			el.appendChild(btn('Delete Page','Delete Page','delete','javascript:docdel()'));
		}
	});
	function docdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='/reference/delete.cgi?a=bitset+bitset+bitset'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>