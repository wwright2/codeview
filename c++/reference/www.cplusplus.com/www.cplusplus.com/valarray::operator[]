<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>valarray::operator[] - C++ Reference</title>
<link rel="canonical" href="http://www.cplusplus.com/reference/valarray/valarray/operator[]/">
<link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">
<link rel="stylesheet" type="text/css" href="/v321/main.css">
<script src="/v321/main.js" type="text/javascript"></script>
<script type='text/javascript'>
var googletag = googletag || {};
googletag.cmd = googletag.cmd || [];
(function() {
var gads = document.createElement('script');
gads.async = true;
gads.type = 'text/javascript';
var useSSL = 'https:' == document.location.protocol;
gads.src = (useSSL ? 'https:' : 'http:') + 
'//www.googletagservices.com/tag/js/gpt.js';
var node = document.getElementsByTagName('script')[0];
node.parentNode.insertBefore(gads, node);
})();
</script>

<script type='text/javascript'>
googletag.cmd.push(function() {
googletag.defineSlot('/32882001/L', [728, 90], 'div-gpt-ad-1427191279638-0').addService(googletag.pubads());
googletag.enableServices();
});
</script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="/" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="/reference/">Reference</a></li>
<li><a href="/reference/valarray/">&lt;valarray&gt;</a></li>
<li><a href="/reference/valarray/valarray/">valarray</a></li>
<li class="here">operator[]</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support">
<div id='div-gpt-ad-1427191279638-0' style='width:728px; height:90px;'>
<script type='text/javascript'>
googletag.cmd.push(function() { googletag.display('div-gpt-ad-1427191279638-0'); });
</script>
</div>
</div>
<div id="I_content">
<div class="C_doc">
<div id="I_type">public member function</div>
<div id="I_file">&lt;valarray&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span><a href="/reference/valarray/valarray/">valarray</a>::operator[]</h1>
<div class="C_prototype"><div class="C_SwitchCases">
<div title="C++98">
<table><tr class="odd"><th>element (1)</th><td><pre>               T  operator[] (size_t n) const;               T&amp; operator[] (size_t n);</pre></td></tr><tr class="even"><th>sub-array (2)</th><td><pre>      valarray&lt;T&gt; operator[] (slice slc) const;   slice_array&lt;T&gt; operator[] (slice slc);      valarray&lt;T&gt; operator[] (const gslice&amp; gslc) const;  gslice_array&lt;T&gt; operator[] (const gslice&amp; gslc);      valarray&lt;T&gt; operator[] (const valarray&lt;bool&gt;&amp; msk) const;    mask_array&lt;T&gt; operator[] (const valarray&lt;bool&gt;&amp; msk);      valarray&lt;T&gt; operator[] (const valarray&lt;size_t&gt;&amp; ind) const;indirect_array&lt;T&gt; operator[] (const valarray&lt;size_t&gt;&amp; ind);</pre></td></tr></table></div>
<div title="C++11" class="off">
<table><tr class="odd"><th>element (1)</th><td><pre>         const T&amp; operator[] (size_t n) const;               T&amp; operator[] (size_t n);</pre></td></tr><tr class="even"><th>subscript (2)</th><td><pre>      valarray&lt;T&gt; operator[] (slice slc) const;   slice_array&lt;T&gt; operator[] (slice slc);      valarray&lt;T&gt; operator[] (const gslice&amp; gslc) const;  gslice_array&lt;T&gt; operator[] (const gslice&amp; gslc);      valarray&lt;T&gt; operator[] (const valarray&lt;bool&gt;&amp; msk) const;    mask_array&lt;T&gt; operator[] (const valarray&lt;bool&gt;&amp; msk);      valarray&lt;T&gt; operator[] (const valarray&lt;size_t&gt;&amp; ind) const;indirect_array&lt;T&gt; operator[] (const valarray&lt;size_t&gt;&amp; ind);</pre></td></tr></table></div>
</div>
</div><div id="I_description">Access element or subscript</div>
<section id="description">
The <i>element access</i> versions <i>(1)</i> return the <var>n</var>-th element in the <samp><a href="/valarray">valarray</a></samp> object.<br>
<br>
The <i>subscript access</i> versions <i>(2)</i> return a sub-array object that selects the elements specified by its argument:<br>
- If the <samp><a href="/valarray">valarray</a></samp> is const-qualified, the function returns a new <samp><a href="/valarray">valarray</a></samp> object with a copy of this selection.<br>
- Otherwise, the function returns a sub-array object, which has reference semantics to the original array, ready to be used as an <i>l-value</i>.<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>n</dt>
<dd>Position of an element in the <samp><a href="/valarray">valarray</a></samp>.<br>
Notice that the first element has the position <code>0</code>, not <code>1</code>.<br>
Values equal or greater than the object's <i><a href="/valarray::size">size</a></i> cause <i>undefined  behavior</i>.<br>
<samp><a href="/size_t">size_t</a></samp> is an unsigned integral type.</dd>
<dt>slc</dt>
<dd>A <samp><a href="/slice">slice</a></samp> object specifying which elements of the <samp><a href="/valarray">valarray</a></samp> are selected.</dd>
<dt>gslc</dt>
<dd>A <samp><a href="/gslice">gslice</a></samp> object specifying which elements of the <samp><a href="/valarray">valarray</a></samp> are selected.</dd>
<dt>msk</dt>
<dd>A <code><a href="/valarray">valarray</a>&lt;bool&gt;</code> with its elements identifying whether each element of <code>*this</code> is selected or not: If an element in <code>*this</code> has its corresponding element in <var>msk</var> set to <code>true</code> it is part of the returned sub-array, otherwise it is not.</dd>
<dt>ind</dt>
<dd>A <code><a href="/valarray">valarray</a>&lt;<a href="/size_t">size_t</a>&gt;</code> with its elements identifying which elements of <code>*this</code> are selected: Each element in <var>ind</var> is the index of an element in <code>*this</code> that will be part of the returned sub-array.<br>
<samp><a href="/size_t">size_t</a></samp> is an unsigned integral type.</dd>
</dl>
</section>
<br>
<section id="return">
<h3>Return value</h3>
An element or a sub-array of <code>*this</code>.<br>
See <samp><a href="/slice_array">slice_array</a></samp>, <samp><a href="/gslice_array">gslice_array</a></samp>, <samp><a href="/mask_array">mask_array</a></samp>, <samp><a href="/indirect_array">indirect_array</a></samp> for details on these returned types.<br>
<br>
The versions returning sub-arrays <i>(2)</i> are allowed to return an object of a different type instead of a <samp><a href="/valarray">valarray</a></samp>. Such a type is required to be implicitly convertible to <samp><a href="/valarray">valarray</a></samp> and be supported as argument for all functions taking <code>valarray&</code> arguments. This allows <i>copy-on-write</i> implementations.<br>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br></code></pre></td>
<td class="source"><pre><code><cite>// valarray::operator[] example</cite>
<dfn>#include &lt;iostream&gt;     </dfn><cite>// std::cout</cite>
<dfn>#include &lt;valarray&gt;     </dfn><cite>// std::valarray, std::slice, std::gslice</cite>

<var>int</var> main ()
{
  std::valarray&lt;<var>int</var>&gt; myarray (10);             <cite>//  0  0  0  0  0  0  0  0  0  0</cite>

  <cite>// slice:</cite>
  myarray[std::slice(2,3,3)]=10;               <cite>//  0  0 10  0  0 10  0  0 10  0</cite>

  <cite>// gslice:</cite>
  size_t lengths[]={2,2};
  size_t strides[]={6,2};
  myarray[std::gslice(1, std::valarray&lt;size_t&gt;(lengths,2), std::valarray&lt;size_t&gt;(strides,2))]=20;
                                               <cite>//  0 20 10 20  0 10  0 20 10 20</cite>

  <cite>// mask:</cite>
  std::valarray&lt;<var>bool</var>&gt; mymask (10);
  <var>for</var> (<var>int</var> i=0; i&lt;10; ++i) mymask[i]= ((i%2)==0);
  myarray[mymask] += std::valarray&lt;<var>int</var>&gt;(3,5);  <cite>//  3 20 13 20  3 10  3 20 13 20</cite>

  <cite>//indirect:</cite>
  size_t sel[]= {2,5,7};
  std::valarray&lt;size_t&gt; myselection (sel,3);   <cite>//  3 20 99 20  3 99  3 99 13 20</cite>
  myarray[myselection]=99;

  std::cout &lt;&lt; <kbd>"myarray: "</kbd>;
  <var>for</var> (size_t i=0; i&lt;myarray.size(); ++i)
	  std::cout &lt;&lt; myarray[i] &lt;&lt; <kbd>' '</kbd>;
  std::cout &lt;&lt; <kbd>'\n'</kbd>;

  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>
3 20 99 20 3 99 3 99 13 20
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="complexity">
<h3>Complexity</h3>
Depends on library implementation.<br>
</section>
<br>
<section id="validity">
<h3>Iterator validity</h3>
No changes: Other valid iterators, references and sub-arrays keep their validity.<br>
</section>
<br>
<section id="access">
<h3>Data races</h3>
The <samp><a href="/valarray">valarray</a></samp> is accessed, and in some library implementations, the non-const versions may also modify it and all its elements (such as in <i>copy-on-reference</i> implementations).<br>
When a reference or an object with <i>reference semantics</i> is returned, it can be used to access or modify the elements of the <samp><a href="/valarray">valarray</a></samp>.<br>
</section>
<br>
<section id="exceptions">
<h3>Exception safety</h3>
If the function implementation performs operations on the elements, and any such operation throws an exception, it causes <i>undefined behavior</i>.<br>
If the function needs to allocate storage and fails, it may throw an exception (such as <samp><a href="/bad_alloc">bad_alloc</a></samp>), although this is not mandated.<br>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/valarray/slice/"><b>slice</b></a></dt><dd>Valarray slice selector <span class="typ">(class)</span></dd></dl><dl class="links"><dt><a href= "/reference/valarray/gslice/"><b>gslice</b></a></dt><dd>Valarray generalized slice selector <span class="typ">(class)</span></dd></dl><dl class="links"><dt><a href= "/reference/valarray/valarray/shift/"><b>valarray::shift</b></a></dt><dd>Shift elements <span class="typ">(public member function)</span></dd></dl>
</section></div><div id="CH_bb"></div></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="/">C++</a></b></h3>
<ul>
<li class="folder info"><a href="/info/">Information</a></li>
<li class="folder doc"><a href="/doc/">Tutorials</a></li>
<li class="folder selected reference"><a href="/reference/">Reference</a></li>
<li class="folder articles"><a href="/articles/">Articles</a></li>
<li class="folder forum"><a href="/forum/">Forum</a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect" id="reference_box">
<h3><b><a href="/reference/">Reference</a></b></h3>
<ul>
<li class="C_Collapsable collapsed"><h4><a href="/reference/clibrary/">C library:</a></h4><ul>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cassert/"><span>&lt;cassert&gt; (assert.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cctype/"><span>&lt;cctype&gt; (ctype.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cerrno/"><span>&lt;cerrno&gt; (errno.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cfenv/"><span>&lt;cfenv&gt; (fenv.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cfloat/"><span>&lt;cfloat&gt; (float.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cinttypes/"><span>&lt;cinttypes&gt; (inttypes.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/ciso646/"><span>&lt;ciso646&gt; (iso646.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/climits/"><span>&lt;climits&gt; (limits.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/clocale/"><span>&lt;clocale&gt; (locale.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cmath/"><span>&lt;cmath&gt; (math.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/csetjmp/"><span>&lt;csetjmp&gt; (setjmp.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/csignal/"><span>&lt;csignal&gt; (signal.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstdarg/"><span>&lt;cstdarg&gt; (stdarg.h)</span></a></li>
<li class="cpp11 folder"><a href="/reference/cstdbool/"><span>&lt;cstdbool&gt; (stdbool.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstddef/"><span>&lt;cstddef&gt; (stddef.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cstdint/"><span>&lt;cstdint&gt; (stdint.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstdio/"><span>&lt;cstdio&gt; (stdio.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstdlib/"><span>&lt;cstdlib&gt; (stdlib.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstring/"><span>&lt;cstring&gt; (string.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/ctgmath/"><span>&lt;ctgmath&gt; (tgmath.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/ctime/"><span>&lt;ctime&gt; (time.h)</span></a></li>
<li class="cpp11 folder"><a href="/reference/cuchar/"><span>&lt;cuchar&gt; (uchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cwchar/"><span>&lt;cwchar&gt; (wchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cwctype/"><span>&lt;cwctype&gt; (wctype.h)</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/stl/">Containers:</a></h4><ul>
<li class="cpp11 folder"><a href="/reference/array/"><span>&lt;array&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/deque/"><span>&lt;deque&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/forward_list/"><span>&lt;forward_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/list/"><span>&lt;list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/map/"><span>&lt;map&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/queue/"><span>&lt;queue&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/set/"><span>&lt;set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/stack/"><span>&lt;stack&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/unordered_map/"><span>&lt;unordered_map&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/unordered_set/"><span>&lt;unordered_set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/vector/"><span>&lt;vector&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/iolibrary/">Input/Output:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="/reference/fstream/"><span>&lt;fstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iomanip/"><span>&lt;iomanip&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/ios/"><span>&lt;ios&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iosfwd/"><span>&lt;iosfwd&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iostream/"><span>&lt;iostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/istream/"><span>&lt;istream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/ostream/"><span>&lt;ostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/sstream/"><span>&lt;sstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/streambuf/"><span>&lt;streambuf&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/multithreading/">Multi-threading:</a></h4><ul>
<li class="cpp11 folder"><a href="/reference/atomic/"><span>&lt;atomic&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/condition_variable/"><span>&lt;condition_variable&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/future/"><span>&lt;future&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/mutex/"><span>&lt;mutex&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/thread/"><span>&lt;thread&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4><a href="/reference/std/">Other:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="/reference/algorithm/"><span>&lt;algorithm&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/bitset/"><span>&lt;bitset&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/chrono/"><span>&lt;chrono&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/codecvt/"><span>&lt;codecvt&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/complex/"><span>&lt;complex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/exception/"><span>&lt;exception&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/functional/"><span>&lt;functional&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/initializer_list/"><span>&lt;initializer_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iterator/"><span>&lt;iterator&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/limits/"><span>&lt;limits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/locale/"><span>&lt;locale&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/memory/"><span>&lt;memory&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/new/"><span>&lt;new&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/numeric/"><span>&lt;numeric&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/random/"><span>&lt;random&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/ratio/"><span>&lt;ratio&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/regex/"><span>&lt;regex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/stdexcept/"><span>&lt;stdexcept&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/string/"><span>&lt;string&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/system_error/"><span>&lt;system_error&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/tuple/"><span>&lt;tuple&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/typeindex/"><span>&lt;typeindex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/typeinfo/"><span>&lt;typeinfo&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/type_traits/"><span>&lt;type_traits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/utility/"><span>&lt;utility&gt;</span></a></li>
<li class="cpp98 cpp11 selected folder"><a href="/reference/valarray/"><span>&lt;valarray&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="valarray_box">
<h3><b><a href="/reference/valarray/">&lt;valarray&gt;</a></b></h3>
<ul>
<li class="C_Collapsable"><h4>classes:</h4><ul>
<li class="cpp98 cpp11 folder"><a href="/reference/valarray/gslice/"><span>gslice</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/gslice_array/"><span>gslice_array</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/indirect_array/"><span>indirect_array</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/mask_array/"><span>mask_array</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/valarray/slice/"><span>slice</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/slice_array/"><span>slice_array</span></a></li>
<li class="cpp98 cpp11 selected folder"><a href="/reference/valarray/valarray/"><span>valarray</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>functions:</h4><ul>
<li class="cpp98 cpp11"><a href="/reference/valarray/abs/"><span>abs</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/acos/"><span>acos</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/asin/"><span>asin</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/atan/"><span>atan</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/atan2/"><span>atan2</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/cos/"><span>cos</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/cosh/"><span>cosh</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/exp/"><span>exp</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/log/"><span>log</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/log10/"><span>log10</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/pow/"><span>pow</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/sin/"><span>sin</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/sinh/"><span>sinh</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/sqrt/"><span>sqrt</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/tan/"><span>tan</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/tanh/"><span>tanh</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="valarray_box">
<h3><b><a href="/reference/valarray/valarray/">valarray</a></b></h3>
<ul>
<li class="cpp98 cpp11"><a href="/reference/valarray/valarray/operators/"><span>valarray operators</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/valarray/valarray/"><span>valarray::valarray</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/valarray/~valarray/"><span>valarray::~valarray</span></a></li>
<li class="C_Collapsable"><h4>member functions:</h4><ul>
<li class="cpp98 cpp11"><a href="/reference/valarray/valarray/apply/"><span>valarray::apply</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/valarray/cshift/"><span>valarray::cshift</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/valarray/max/"><span>valarray::max</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/valarray/min/"><span>valarray::min</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/valarray/operator=/"><span>valarray::operator=</span></a></li>
<li class="cpp98 cpp11 selected"><a href="/reference/valarray/valarray/operator[]/"><span>valarray::operator[]</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/valarray/resize/"><span>valarray::resize</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/valarray/shift/"><span>valarray::shift</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/valarray/size/"><span>valarray::size</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/valarray/valarray/sum/"><span>valarray::sum</span></a></li>
<li class="cpp11"><a href="/reference/valarray/valarray/swap/"><span>valarray::swap</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>non-member overloads:</h4><ul>
<li class="cpp11"><a href="/reference/valarray/valarray/begin/"><span>begin (valarray)</span></a></li>
<li class="cpp11"><a href="/reference/valarray/valarray/end/"><span>end (valarray)</span></a></li>
<li class="cpp11"><a href="/reference/valarray/valarray/swap-free/"><span>swap (valarray)</span></a></li>
</ul></li>
</ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="/">Home page</a> | <a href="/privacy.do">Privacy policy</a><br>&copy; cplusplus.com, 2000-2016 - All rights reserved - <i>v3.1</i><br><a href="/contact.do?referrer=www.cplusplus.com%2Freference%2Fvalarray%2Fvalarray%2Foperator%5B%5D%2F">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
 onSession ( function(us) {
		el=document.getElementById('CH_bb'); el.innerHTML='';
		if (us.auth(4096)) {
			
			el.appendChild(btn('Edit Page','Edit Page','edit','/reference/edit.cgi?a=valarray+valarray+operator%5B%5D'));
			el.appendChild(btn('Delete Page','Delete Page','delete','javascript:docdel()'));
		}
	});
	function docdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='/reference/delete.cgi?a=valarray+valarray+operator%5B%5D'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>