<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>deque::assign - C++ Reference</title>
<link rel="canonical" href="http://www.cplusplus.com/reference/deque/deque/assign/">
<link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">
<link rel="stylesheet" type="text/css" href="/v321/main.css">
<script src="/v321/main.js" type="text/javascript"></script>
<script type='text/javascript'>
var googletag = googletag || {};
googletag.cmd = googletag.cmd || [];
(function() {
var gads = document.createElement('script');
gads.async = true;
gads.type = 'text/javascript';
var useSSL = 'https:' == document.location.protocol;
gads.src = (useSSL ? 'https:' : 'http:') + 
'//www.googletagservices.com/tag/js/gpt.js';
var node = document.getElementsByTagName('script')[0];
node.parentNode.insertBefore(gads, node);
})();
</script>

<script type='text/javascript'>
googletag.cmd.push(function() {
googletag.defineSlot('/32882001/L', [728, 90], 'div-gpt-ad-1427191279638-0').addService(googletag.pubads());
googletag.enableServices();
});
</script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="/" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="/reference/">Reference</a></li>
<li><a href="/reference/deque/">&lt;deque&gt;</a></li>
<li><a href="/reference/deque/deque/">deque</a></li>
<li class="here">assign</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support">
<div id='div-gpt-ad-1427191279638-0' style='width:728px; height:90px;'>
<script type='text/javascript'>
googletag.cmd.push(function() { googletag.display('div-gpt-ad-1427191279638-0'); });
</script>
</div>
</div>
<div id="I_content">
<div class="C_doc">
<div id="I_type">public member function</div>
<div id="I_file">&lt;deque&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span><a href="/reference/deque/deque/">deque</a>::assign</h1>
<div class="C_prototype"><div class="C_SwitchCases">
<div title="C++98">
<table><tr class="odd"><th>range (1)</th><td><pre>template &lt;class InputIterator&gt;  void assign (InputIterator first, InputIterator last);</pre></td></tr><tr class="even"><th>fill (2)</th><td><pre>void assign (size_type n, const value_type&amp; val);</pre></td></tr></table></div>
<div title="C++11" class="off">
<table><tr class="odd"><th>range (1)</th><td><pre>template &lt;class InputIterator&gt;  void assign (InputIterator first, InputIterator last);</pre></td></tr><tr class="even"><th>fill (2)</th><td><pre>void assign (size_type n, const value_type&amp; val);</pre></td></tr><tr class="odd"><th>initializer list (3)</th><td><pre>void assign (initializer_list&lt;value_type&gt; il);</pre></td></tr></table></div>
</div>
</div><div id="I_description">Assign container content</div>
<section id="description">
Assigns new contents to the <a href="/deque">deque</a> container, replacing its current contents, and modifying its <a href="/deque::size">size</a> accordingly.<br>
<br>
<div class="C_SwitchCases">
<div title="C++98">
In the <i>range version</i> (1), the new contents are elements constructed from each of the elements in the range between <i>first</i> and <i>last</i>, in the same order.<br>
<br>
In the <i>fill version</i> (2), the new contents are <i>n</i> elements, each initialized to a copy of <i>val</i>.<br>
<br>
If needed, the container uses its <a href="/deque::get_allocator">internal allocator</a> to allocate additional storage.<br>
</div>
<div title="C++11">
In the <i>range version</i> (1), the new contents are elements constructed from each of the elements in the range between <i>first</i> and <i>last</i>, in the same order.<br>
<br>
In the <i>fill version</i> (2), the new contents are <i>n</i> elements, each initialized to a copy of <i>val</i>.<br>
<br>
In the <i>initializer list version</i> (3), the new contents are copies of the values passed as initializer list, in the same order.<br>
<br>
If there are changes in storage, the <a href="/deque::get_allocator">internal allocator</a> is used (through its <a href="/allocator_traits">traits</a>). It is also used to <a href="/allocator_traits::destroy">destroy</a> all existing elements, and to <a href="/allocator_traits::construct">construct</a> the new ones.<br>
</div>
</div>
<br>
Any elements held in the container before the call are <i>destroyed</i> and replaced by newly constructed elements (no assignments of elements take place).<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>first, last</dt>
<dd>Input iterators to the initial and final positions in a sequence. The range used is <tt>[first,last)</tt>, which includes all the elements between <i>first</i> and <i>last</i>, including the element pointed by <i>first</i> but not the element pointed by <i>last</i>.<br>
The function template argument <tt>InputIterator</tt> shall be an <a href="/InputIterator">input iterator</a> type that points to elements of a type from which <tt>value_type</tt> objects can be constructed.</dd>
<dt>n</dt>
<dd>New size for the container.<br>
Member type <tt>size_type</tt> is an unsigned integral type.</dd>
<dt>val</dt>
<dd>Value to fill the container with. Each of the <i>n</i> elements in the container will be initialized to a copy of this value.<br>
Member type <tt>value_type</tt> is the type of the elements in the container, defined in <a href="/deque">deque</a> as an alias of its first template parameter (<tt>T</tt>).</dd>
<dt>il</dt>
<dd>An <a href="/initializer_list">initializer_list</a> object. The compiler will automatically construct such objects from <i>initializer list</i> declarators.<br>
Member type <tt>value_type</tt> is the type of the elements in the container, defined in <a href="/deque">deque</a> as an alias of its first template parameter (<tt>T</tt>).</dd>
</dl>
</section>
<br>
<section id="return">
<h3>Return value</h3>
none<br>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br></code></pre></td>
<td class="source"><pre><code><cite>// deque::assign</cite>
<dfn>#include &lt;iostream&gt;</dfn>
<dfn>#include &lt;deque&gt;</dfn>

<var>int</var> main ()
{
  std::deque&lt;<var>int</var>&gt; first;
  std::deque&lt;<var>int</var>&gt; second;
  std::deque&lt;<var>int</var>&gt; third;

  first.assign (7,100);             <cite>// 7 ints with a value of 100</cite>

  std::deque&lt;<var>int</var>&gt;::iterator it;
  it=first.begin()+1;

  second.assign (it,first.end()-1); <cite>// the 5 central values of first</cite>

  <var>int</var> myints[] = {1776,7,4};
  third.assign (myints,myints+3);   <cite>// assigning from array.</cite>

  std::cout &lt;&lt; <kbd>"Size of first: "</kbd> &lt;&lt; <var>int</var> (first.size()) &lt;&lt; <kbd>'\n'</kbd>;
  std::cout &lt;&lt; <kbd>"Size of second: "</kbd> &lt;&lt; <var>int</var> (second.size()) &lt;&lt; <kbd>'\n'</kbd>;
  std::cout &lt;&lt; <kbd>"Size of third: "</kbd> &lt;&lt; <var>int</var> (third.size()) &lt;&lt; <kbd>'\n'</kbd>;
  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
Output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>Size of first: 7
Size of second: 5
Size of third: 3
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="complexity">
<h3>Complexity</h3>
Linear in initial and final <a href="/deque::size">sizes</a> (destructions, constructions).<br>
</section>
<br>
<section id="validity">
<h3>Iterator validity</h3>
All iterators, pointers and references related to this container are invalidated.<br>
</section>
<br>
<section id="access">
<h3>Data races</h3>
All copied elements are accessed.<br>
The container is modified.<br>
All contained elements are modified.<br>
</section>
<br>
<section id="exceptions">
<h3>Exception safety</h3>
<b>Basic guarantee:</b> if an exception is thrown, the container is in a valid state.<br>
If <a href="/allocator_traits::construct">allocator_traits::construct</a> is not supported with the appropriate arguments for the element constructions, or if the range specified by <tt>[first,last)</tt> is not valid, it causes <i>undefined behavior</i>.<br>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/deque/deque/operator=/"><b>deque::operator=</b></a></dt><dd>Assign content <span class="typ">(public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/deque/deque/resize/"><b>deque::resize</b></a></dt><dd>Change size <span class="typ">(public member function)</span></dd></dl>
</section></div><div id="CH_bb"></div></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="/">C++</a></b></h3>
<ul>
<li class="folder info"><a href="/info/">Information</a></li>
<li class="folder doc"><a href="/doc/">Tutorials</a></li>
<li class="folder selected reference"><a href="/reference/">Reference</a></li>
<li class="folder articles"><a href="/articles/">Articles</a></li>
<li class="folder forum"><a href="/forum/">Forum</a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect" id="reference_box">
<h3><b><a href="/reference/">Reference</a></b></h3>
<ul>
<li class="C_Collapsable collapsed"><h4><a href="/reference/clibrary/">C library:</a></h4><ul>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cassert/"><span>&lt;cassert&gt; (assert.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cctype/"><span>&lt;cctype&gt; (ctype.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cerrno/"><span>&lt;cerrno&gt; (errno.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cfenv/"><span>&lt;cfenv&gt; (fenv.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cfloat/"><span>&lt;cfloat&gt; (float.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cinttypes/"><span>&lt;cinttypes&gt; (inttypes.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/ciso646/"><span>&lt;ciso646&gt; (iso646.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/climits/"><span>&lt;climits&gt; (limits.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/clocale/"><span>&lt;clocale&gt; (locale.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cmath/"><span>&lt;cmath&gt; (math.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/csetjmp/"><span>&lt;csetjmp&gt; (setjmp.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/csignal/"><span>&lt;csignal&gt; (signal.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstdarg/"><span>&lt;cstdarg&gt; (stdarg.h)</span></a></li>
<li class="cpp11 folder"><a href="/reference/cstdbool/"><span>&lt;cstdbool&gt; (stdbool.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstddef/"><span>&lt;cstddef&gt; (stddef.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cstdint/"><span>&lt;cstdint&gt; (stdint.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstdio/"><span>&lt;cstdio&gt; (stdio.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstdlib/"><span>&lt;cstdlib&gt; (stdlib.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstring/"><span>&lt;cstring&gt; (string.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/ctgmath/"><span>&lt;ctgmath&gt; (tgmath.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/ctime/"><span>&lt;ctime&gt; (time.h)</span></a></li>
<li class="cpp11 folder"><a href="/reference/cuchar/"><span>&lt;cuchar&gt; (uchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cwchar/"><span>&lt;cwchar&gt; (wchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cwctype/"><span>&lt;cwctype&gt; (wctype.h)</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4><a href="/reference/stl/">Containers:</a></h4><ul>
<li class="cpp11 folder"><a href="/reference/array/"><span>&lt;array&gt;</span></a></li>
<li class="cpp98 cpp11 selected folder"><a href="/reference/deque/"><span>&lt;deque&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/forward_list/"><span>&lt;forward_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/list/"><span>&lt;list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/map/"><span>&lt;map&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/queue/"><span>&lt;queue&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/set/"><span>&lt;set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/stack/"><span>&lt;stack&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/unordered_map/"><span>&lt;unordered_map&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/unordered_set/"><span>&lt;unordered_set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/vector/"><span>&lt;vector&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/iolibrary/">Input/Output:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="/reference/fstream/"><span>&lt;fstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iomanip/"><span>&lt;iomanip&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/ios/"><span>&lt;ios&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iosfwd/"><span>&lt;iosfwd&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iostream/"><span>&lt;iostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/istream/"><span>&lt;istream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/ostream/"><span>&lt;ostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/sstream/"><span>&lt;sstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/streambuf/"><span>&lt;streambuf&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/multithreading/">Multi-threading:</a></h4><ul>
<li class="cpp11 folder"><a href="/reference/atomic/"><span>&lt;atomic&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/condition_variable/"><span>&lt;condition_variable&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/future/"><span>&lt;future&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/mutex/"><span>&lt;mutex&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/thread/"><span>&lt;thread&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/std/">Other:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="/reference/algorithm/"><span>&lt;algorithm&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/bitset/"><span>&lt;bitset&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/chrono/"><span>&lt;chrono&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/codecvt/"><span>&lt;codecvt&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/complex/"><span>&lt;complex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/exception/"><span>&lt;exception&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/functional/"><span>&lt;functional&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/initializer_list/"><span>&lt;initializer_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iterator/"><span>&lt;iterator&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/limits/"><span>&lt;limits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/locale/"><span>&lt;locale&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/memory/"><span>&lt;memory&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/new/"><span>&lt;new&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/numeric/"><span>&lt;numeric&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/random/"><span>&lt;random&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/ratio/"><span>&lt;ratio&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/regex/"><span>&lt;regex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/stdexcept/"><span>&lt;stdexcept&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/string/"><span>&lt;string&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/system_error/"><span>&lt;system_error&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/tuple/"><span>&lt;tuple&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/typeindex/"><span>&lt;typeindex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/typeinfo/"><span>&lt;typeinfo&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/type_traits/"><span>&lt;type_traits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/utility/"><span>&lt;utility&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/valarray/"><span>&lt;valarray&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="deque_box">
<h3><b><a href="/reference/deque/">&lt;deque&gt;</a></b></h3>
<ul>
<li class="cpp98 cpp11 selected folder"><a href="/reference/deque/deque/"><span>deque</span></a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="deque_box">
<h3><b><a href="/reference/deque/deque/">deque</a></b></h3>
<ul>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/deque/"><span>deque::deque</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/~deque/"><span>deque::~deque</span></a></li>
<li class="C_Collapsable"><h4>member functions:</h4><ul>
<li class="cpp98 cpp11 selected"><a href="/reference/deque/deque/assign/"><span>deque::assign</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/at/"><span>deque::at</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/back/"><span>deque::back</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/begin/"><span>deque::begin</span></a></li>
<li class="cpp11"><a href="/reference/deque/deque/cbegin/"><span>deque::cbegin</span></a></li>
<li class="cpp11"><a href="/reference/deque/deque/cend/"><span>deque::cend</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/clear/"><span>deque::clear</span></a></li>
<li class="cpp11"><a href="/reference/deque/deque/crbegin/"><span>deque::crbegin</span></a></li>
<li class="cpp11"><a href="/reference/deque/deque/crend/"><span>deque::crend</span></a></li>
<li class="cpp11"><a href="/reference/deque/deque/emplace/"><span>deque::emplace</span></a></li>
<li class="cpp11"><a href="/reference/deque/deque/emplace_back/"><span>deque::emplace_back</span></a></li>
<li class="cpp11"><a href="/reference/deque/deque/emplace_front/"><span>deque::emplace_front</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/empty/"><span>deque::empty</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/end/"><span>deque::end</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/erase/"><span>deque::erase</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/front/"><span>deque::front</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/get_allocator/"><span>deque::get_allocator</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/insert/"><span>deque::insert</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/max_size/"><span>deque::max_size</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/operator=/"><span>deque::operator=</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/operator[]/"><span>deque::operator[]</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/pop_back/"><span>deque::pop_back</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/pop_front/"><span>deque::pop_front</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/push_back/"><span>deque::push_back</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/push_front/"><span>deque::push_front</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/rbegin/"><span>deque::rbegin</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/rend/"><span>deque::rend</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/resize/"><span>deque::resize</span></a></li>
<li class="cpp11"><a href="/reference/deque/deque/shrink_to_fit/"><span>deque::shrink_to_fit</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/size/"><span>deque::size</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/swap/"><span>deque::swap</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>non-member overloads:</h4><ul>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/operators/"><span>relational operators (deque)</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/deque/deque/swap-free/"><span>swap (deque)</span></a></li>
</ul></li>
</ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="/">Home page</a> | <a href="/privacy.do">Privacy policy</a><br>&copy; cplusplus.com, 2000-2016 - All rights reserved - <i>v3.1</i><br><a href="/contact.do?referrer=www.cplusplus.com%2Freference%2Fdeque%2Fdeque%2Fassign%2F">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
 onSession ( function(us) {
		el=document.getElementById('CH_bb'); el.innerHTML='';
		if (us.auth(4096)) {
			
			el.appendChild(btn('Edit Page','Edit Page','edit','/reference/edit.cgi?a=deque+deque+assign'));
			el.appendChild(btn('Delete Page','Delete Page','delete','javascript:docdel()'));
		}
	});
	function docdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='/reference/delete.cgi?a=deque+deque+assign'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>