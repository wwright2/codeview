<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>freopen - C++ Reference</title>
<link rel="canonical" href="http://www.cplusplus.com/reference/cstdio/freopen/">
<link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">
<link rel="stylesheet" type="text/css" href="/v321/main.css">
<script src="/v321/main.js" type="text/javascript"></script>
<script type='text/javascript'>
var googletag = googletag || {};
googletag.cmd = googletag.cmd || [];
(function() {
var gads = document.createElement('script');
gads.async = true;
gads.type = 'text/javascript';
var useSSL = 'https:' == document.location.protocol;
gads.src = (useSSL ? 'https:' : 'http:') + 
'//www.googletagservices.com/tag/js/gpt.js';
var node = document.getElementsByTagName('script')[0];
node.parentNode.insertBefore(gads, node);
})();
</script>

<script type='text/javascript'>
googletag.cmd.push(function() {
googletag.defineSlot('/32882001/L', [728, 90], 'div-gpt-ad-1427191279638-0').addService(googletag.pubads());
googletag.enableServices();
});
</script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="/" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="/reference/">Reference</a></li>
<li><a href="/reference/cstdio/">&lt;cstdio&gt; </a></li>
<li class="here">freopen</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support">
<div id='div-gpt-ad-1427191279638-0' style='width:728px; height:90px;'>
<script type='text/javascript'>
googletag.cmd.push(function() { googletag.display('div-gpt-ad-1427191279638-0'); });
</script>
</div>
</div>
<div id="I_content">
<div class="C_doc">
<div id="I_type">function</div>
<div id="I_file">&lt;cstdio&gt;</div>
<h1>freopen</h1>
<div class="C_prototype"><pre>FILE * freopen ( const char * filename, const char * mode, FILE * stream );</pre></div><div id="I_description">Reopen stream with different file or mode</div>
<section id="description">
Reuses <i>stream</i> to either open the file specified by <i>filename</i> or to change its access <i>mode</i>.<br>
<br>
If a new <i>filename</i> is specified, the function first attempts to close any file already associated with <i>stream</i> (third parameter) and disassociates it. Then, independently of whether that stream was successfuly closed or not, <tt>freopen</tt> opens the file specified by <i>filename</i> and associates it with the <i>stream</i> just as <a href="/fopen">fopen</a> would do using the specified <i>mode</i>.<br>
<br>
If <i>filename</i> is a null pointer, the function attempts to change the <i>mode</i> of the stream. Although a particular library implementation is allowed to restrict the changes permitted, and under which circumstances.<br>
<br>
The <i>error indicator</i> and <i>eof indicator</i> are automatically cleared (as if <a href="/clearerr">clearerr</a> was called).<br>
<br>
This function is especially useful for redirecting predefined streams like <tt>stdin</tt>, <tt>stdout</tt> and <tt>stderr</tt> to specific files (see the example below).<br>
</section>
<br>
<section id="parameters">
<h3>Parameters</h3>
<dl>
<dt>filename</dt>
<dd>C string containing the name of the file to be opened.<br>
Its value shall follow the file name specifications of the running environment and can include a path (if supported by the system).<br>
If this parameter is a null pointer, the function attempts to change the mode of the <i>stream</i>, as if the file name currently associated with that stream had been used.<br>
</dd>
<dt>mode</dt>
<dd>C string containing a file access mode. It can be:<br>
<table class="boxed"><tr><td>"r"</td><td><b>read:</b> Open file for input operations. The file must exist.</td></tr>
<tr><td>"w"</td><td><b>write:</b> Create an empty file for output operations. If a file with the same name already exists, its contents are discarded and the file is treated as a new empty file. </td></tr>
<tr><td>"a"</td><td><b>append:</b> Open file for output at the end of a file. Output operations always write data at the end of the file, expanding it. Repositioning operations (<a href="/fseek">fseek</a>, <a href="/fsetpos">fsetpos</a>, <a href="/rewind">rewind</a>) are ignored. The file is created if it does not exist.</td></tr>
<tr><td>"r+"</td><td><b>read/update:</b> Open a file for update (both for input and output). The file must exist.</td></tr>
<tr><td>"w+"</td><td><b>write/update:</b> Create an empty file and open it for update (both for input and output). If a file with the same name already exists its contents are discarded and the file is treated as a new empty file.</td></tr>
<tr><td>"a+"</td><td><b>append/update:</b> Open a file for update (both for input and output) with all output operations writing data at the end of the file. Repositioning operations (<a href="/fseek">fseek</a>, <a href="/fsetpos">fsetpos</a>, <a href="/rewind">rewind</a>) affects the next input operations, but output operations move the position back to the end of file. The file is created if it does not exist.</td></tr>
</table>
With the <i>mode</i> specifiers above the file is open as a <i>text file</i>. In order to open a file as a <i>binary file</i>, a <tt>"b"</tt> character has to be included in the <i>mode</i> string. This additional <tt>"b"</tt> character can either be appended at the end of the string (thus making the following compound modes: "rb", "wb", "ab", "r+b", "w+b", "a+b") or be inserted between the letter and the <tt>"+"</tt> sign for the mixed modes ("rb+", "wb+", "ab+").<br>
<br>
The new C standard (C2011, which is not part of C++) adds a new standard subspecifier (<tt>"x"</tt>), that can be appended to any <tt>"w"</tt> specifier (to form <tt>"wx"</tt>, <tt>"wbx"</tt>, <tt>"w+x"</tt> or <tt>"w+bx"/"wb+x"</tt>). This subspecifier forces the function to fail if the file exists, instead of overwriting it.<br>
<br>
If additional characters follow the sequence, the behavior depends on the library implementation: some implementations may ignore additional characters so that for example an additional <tt>"t"</tt> (sometimes used to explicitly state a <i>text file</i>) is accepted.<br>
<br>
On some library implementations, opening or creating a text file with update mode may treat the stream instead as a binary file.<br>
</dd>
<dt>stream</dt>
<dd>pointer to a <a href="/FILE">FILE</a> object that identifies the stream to be reopened.</dd> <br>
</dl>
</section>
<br>
<section id="return">
<h3>Return Value</h3>
If the file is successfully reopened, the function returns the pointer passed as parameter <i>stream</i>, which can be used to identify the reopened stream.<br>
Otherwise, a null pointer is returned.<br>
On most library implementations, the <a href="/errno">errno</a> variable is also set to a system-specific error code on failure.<br>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br></code></pre></td>
<td class="source"><pre><code><cite>/* freopen example: redirecting stdout */</cite>
<dfn>#include &lt;stdio.h&gt;</dfn>

<var>int</var> main ()
{
  freopen (<kbd>"myfile.txt"</kbd>,<kbd>"w"</kbd>,stdout);
  printf (<kbd>"This sentence is redirected to a file."</kbd>);
  fclose (stdout);
  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
This sample code redirects the output that would normally go to the standard output to a file called <tt>myfile.txt</tt>, that after this program is executed contains:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>This sentence is redirected to a file.
</samp></pre></td></tr></table></div>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/cstdio/fopen/"><b>fopen</b></a></dt><dd>Open file <span class="typ">(function)</span></dd></dl><dl class="links"><dt><a href= "/reference/cstdio/fclose/"><b>fclose</b></a></dt><dd>Close file <span class="typ">(function)</span></dd></dl>
</section></div><div id="CH_bb"></div></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="/">C++</a></b></h3>
<ul>
<li class="folder info"><a href="/info/">Information</a></li>
<li class="folder doc"><a href="/doc/">Tutorials</a></li>
<li class="folder selected reference"><a href="/reference/">Reference</a></li>
<li class="folder articles"><a href="/articles/">Articles</a></li>
<li class="folder forum"><a href="/forum/">Forum</a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect" id="reference_box">
<h3><b><a href="/reference/">Reference</a></b></h3>
<ul>
<li class="C_Collapsable"><h4><a href="/reference/clibrary/">C library:</a></h4><ul>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cassert/"><span>&lt;cassert&gt; (assert.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cctype/"><span>&lt;cctype&gt; (ctype.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cerrno/"><span>&lt;cerrno&gt; (errno.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cfenv/"><span>&lt;cfenv&gt; (fenv.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cfloat/"><span>&lt;cfloat&gt; (float.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cinttypes/"><span>&lt;cinttypes&gt; (inttypes.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/ciso646/"><span>&lt;ciso646&gt; (iso646.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/climits/"><span>&lt;climits&gt; (limits.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/clocale/"><span>&lt;clocale&gt; (locale.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cmath/"><span>&lt;cmath&gt; (math.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/csetjmp/"><span>&lt;csetjmp&gt; (setjmp.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/csignal/"><span>&lt;csignal&gt; (signal.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstdarg/"><span>&lt;cstdarg&gt; (stdarg.h)</span></a></li>
<li class="cpp11 folder"><a href="/reference/cstdbool/"><span>&lt;cstdbool&gt; (stdbool.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstddef/"><span>&lt;cstddef&gt; (stddef.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cstdint/"><span>&lt;cstdint&gt; (stdint.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 selected folder"><a href="/reference/cstdio/"><span>&lt;cstdio&gt; (stdio.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstdlib/"><span>&lt;cstdlib&gt; (stdlib.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstring/"><span>&lt;cstring&gt; (string.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/ctgmath/"><span>&lt;ctgmath&gt; (tgmath.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/ctime/"><span>&lt;ctime&gt; (time.h)</span></a></li>
<li class="cpp11 folder"><a href="/reference/cuchar/"><span>&lt;cuchar&gt; (uchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cwchar/"><span>&lt;cwchar&gt; (wchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cwctype/"><span>&lt;cwctype&gt; (wctype.h)</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/stl/">Containers:</a></h4><ul>
<li class="cpp11 folder"><a href="/reference/array/"><span>&lt;array&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/deque/"><span>&lt;deque&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/forward_list/"><span>&lt;forward_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/list/"><span>&lt;list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/map/"><span>&lt;map&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/queue/"><span>&lt;queue&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/set/"><span>&lt;set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/stack/"><span>&lt;stack&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/unordered_map/"><span>&lt;unordered_map&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/unordered_set/"><span>&lt;unordered_set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/vector/"><span>&lt;vector&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/iolibrary/">Input/Output:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="/reference/fstream/"><span>&lt;fstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iomanip/"><span>&lt;iomanip&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/ios/"><span>&lt;ios&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iosfwd/"><span>&lt;iosfwd&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iostream/"><span>&lt;iostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/istream/"><span>&lt;istream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/ostream/"><span>&lt;ostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/sstream/"><span>&lt;sstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/streambuf/"><span>&lt;streambuf&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/multithreading/">Multi-threading:</a></h4><ul>
<li class="cpp11 folder"><a href="/reference/atomic/"><span>&lt;atomic&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/condition_variable/"><span>&lt;condition_variable&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/future/"><span>&lt;future&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/mutex/"><span>&lt;mutex&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/thread/"><span>&lt;thread&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/std/">Other:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="/reference/algorithm/"><span>&lt;algorithm&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/bitset/"><span>&lt;bitset&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/chrono/"><span>&lt;chrono&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/codecvt/"><span>&lt;codecvt&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/complex/"><span>&lt;complex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/exception/"><span>&lt;exception&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/functional/"><span>&lt;functional&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/initializer_list/"><span>&lt;initializer_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iterator/"><span>&lt;iterator&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/limits/"><span>&lt;limits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/locale/"><span>&lt;locale&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/memory/"><span>&lt;memory&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/new/"><span>&lt;new&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/numeric/"><span>&lt;numeric&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/random/"><span>&lt;random&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/ratio/"><span>&lt;ratio&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/regex/"><span>&lt;regex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/stdexcept/"><span>&lt;stdexcept&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/string/"><span>&lt;string&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/system_error/"><span>&lt;system_error&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/tuple/"><span>&lt;tuple&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/typeindex/"><span>&lt;typeindex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/typeinfo/"><span>&lt;typeinfo&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/type_traits/"><span>&lt;type_traits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/utility/"><span>&lt;utility&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/valarray/"><span>&lt;valarray&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect c90 c99 arm cpp98 cpp11" id="cstdio_box">
<h3><b><a href="/reference/cstdio/">&lt;cstdio&gt; (stdio.h)</a></b></h3>
<ul>
<li class="C_Collapsable"><h4>functions:</h4><ul>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/clearerr/"><span>clearerr</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/fclose/"><span>fclose</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/feof/"><span>feof</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/ferror/"><span>ferror</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/fflush/"><span>fflush</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/fgetc/"><span>fgetc</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/fgetpos/"><span>fgetpos</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/fgets/"><span>fgets</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/fopen/"><span>fopen</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/fprintf/"><span>fprintf</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/fputc/"><span>fputc</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/fputs/"><span>fputs</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/fread/"><span>fread</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 selected"><a href="/reference/cstdio/freopen/"><span>freopen</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/fscanf/"><span>fscanf</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/fseek/"><span>fseek</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/fsetpos/"><span>fsetpos</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/ftell/"><span>ftell</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/fwrite/"><span>fwrite</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/getc/"><span>getc</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/getchar/"><span>getchar</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/gets/"><span>gets</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/perror/"><span>perror</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/printf/"><span>printf</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/putc/"><span>putc</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/putchar/"><span>putchar</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/puts/"><span>puts</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/remove/"><span>remove</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/rename/"><span>rename</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/rewind/"><span>rewind</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/scanf/"><span>scanf</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/setbuf/"><span>setbuf</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/setvbuf/"><span>setvbuf</span></a></li>
<li class="c99 cpp11"><a href="/reference/cstdio/snprintf/"><span>snprintf</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/sprintf/"><span>sprintf</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/sscanf/"><span>sscanf</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/tmpfile/"><span>tmpfile</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/tmpnam/"><span>tmpnam</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/ungetc/"><span>ungetc</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/vfprintf/"><span>vfprintf</span></a></li>
<li class="c99 cpp11"><a href="/reference/cstdio/vfscanf/"><span>vfscanf</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/vprintf/"><span>vprintf</span></a></li>
<li class="c99 cpp11"><a href="/reference/cstdio/vscanf/"><span>vscanf</span></a></li>
<li class="c99 cpp11"><a href="/reference/cstdio/vsnprintf/"><span>vsnprintf</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/vsprintf/"><span>vsprintf</span></a></li>
<li class="c99 cpp11"><a href="/reference/cstdio/vsscanf/"><span>vsscanf</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>objects:</h4><ul>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/stderr/"><span>stderr</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/stdin/"><span>stdin</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/stdout/"><span>stdout</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>types:</h4><ul>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/FILE/"><span>FILE</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/fpos_t/"><span>fpos_t</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/size_t/"><span>size_t</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>macro constants:</h4><ul>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/BUFSIZ/"><span>BUFSIZ</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/EOF/"><span>EOF</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/FILENAME_MAX/"><span>FILENAME_MAX</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/FOPEN_MAX/"><span>FOPEN_MAX</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/L_tmpnam/"><span>L_tmpnam</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/NULL/"><span>NULL</span></a></li>
<li class="c90 c99 arm cpp98 cpp11"><a href="/reference/cstdio/TMP_MAX/"><span>TMP_MAX</span></a></li>
</ul></li>
</ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="/">Home page</a> | <a href="/privacy.do">Privacy policy</a><br>&copy; cplusplus.com, 2000-2016 - All rights reserved - <i>v3.1</i><br><a href="/contact.do?referrer=www.cplusplus.com%2Freference%2Fcstdio%2Ffreopen%2F">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
 onSession ( function(us) {
		el=document.getElementById('CH_bb'); el.innerHTML='';
		if (us.auth(4096)) {
			
			el.appendChild(btn('Edit Page','Edit Page','edit','/reference/edit.cgi?a=cstdio+freopen'));
			el.appendChild(btn('Delete Page','Delete Page','delete','javascript:docdel()'));
		}
	});
	function docdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='/reference/delete.cgi?a=cstdio+freopen'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>