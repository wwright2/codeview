<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>exception - C++ Reference</title>
<link rel="canonical" href="http://www.cplusplus.com/reference/exception/exception/">
<link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">
<link rel="stylesheet" type="text/css" href="/v321/main.css">
<script src="/v321/main.js" type="text/javascript"></script>
<script type='text/javascript'>
var googletag = googletag || {};
googletag.cmd = googletag.cmd || [];
(function() {
var gads = document.createElement('script');
gads.async = true;
gads.type = 'text/javascript';
var useSSL = 'https:' == document.location.protocol;
gads.src = (useSSL ? 'https:' : 'http:') + 
'//www.googletagservices.com/tag/js/gpt.js';
var node = document.getElementsByTagName('script')[0];
node.parentNode.insertBefore(gads, node);
})();
</script>

<script type='text/javascript'>
googletag.cmd.push(function() {
googletag.defineSlot('/32882001/L', [728, 90], 'div-gpt-ad-1427191279638-0').addService(googletag.pubads());
googletag.enableServices();
});
</script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="/" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="/reference/">Reference</a></li>
<li><a href="/reference/exception/">&lt;exception&gt;</a></li>
<li class="here">exception</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support">
<div id='div-gpt-ad-1427191279638-0' style='width:728px; height:90px;'>
<script type='text/javascript'>
googletag.cmd.push(function() { googletag.display('div-gpt-ad-1427191279638-0'); });
</script>
</div>
</div>
<div id="I_content">
<div class="C_doc">
<div id="I_type">class</div>
<div id="I_file">&lt;exception&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span>exception</h1>
<div class="C_prototype"><pre>class exception;</pre></div><div id="I_description">Standard exception class</div>
<section id="description">
Base class for standard exceptions.<br>
<br>
All objects thrown by components of the standard library are derived from this class. Therefore, all standard exceptions can be caught by catching this type by reference.<br>
<br>
It is declared as:<br>
<div class="C_SwitchCases">
<div title="C++98">
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br></code></pre></td>
<td class="source"><pre><code><var>class</var> exception {
<var>public</var>:
  exception () <var>throw</var>();
  exception (<var>const</var> exception&amp;) <var>throw</var>();
  exception&amp; <var>operator</var>= (<var>const</var> exception&amp;) <var>throw</var>();
  <var>virtual</var> ~exception() <var>throw</var>();
  <var>virtual</var> <var>const</var> <var>char</var>* what() <var>const</var> <var>throw</var>();
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
</div>
<div title="C++11">
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br></code></pre></td>
<td class="source"><pre><code><var>class</var> exception {
<var>public</var>:
  exception () <var>noexcept</var>;
  exception (<var>const</var> exception&amp;) <var>noexcept</var>;
  exception&amp; <var>operator</var>= (<var>const</var> exception&amp;) <var>noexcept</var>;
  <var>virtual</var> ~exception();
  <var>virtual</var> <var>const</var> <var>char</var>* what() <var>const</var> <var>noexcept</var>;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
</div>
</div>
</section>
<br>
<section id="functions">
<h3>Member functions</h3>
<dl class="links"><dt><a href= "/reference/exception/exception/exception/"><b>(constructor)</b></a></dt><dd>Construct exception <span class="typ">( public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/exception/exception/operator=/"><b>operator=</b></a></dt><dd>Copy exception <span class="typ">( public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/exception/exception/what/"><b>what (virtual)</b></a></dt><dd>Get string identifying exception <span class="typ">( public member function)</span></dd></dl><dl class="links"><dt><a href= "/reference/exception/exception/~exception/"><b>(destructor) (virtual)</b></a></dt><dd>Destroy exception <span class="typ">( public virtual member function)</span></dd></dl>
</section>
<br>
<section id="classes">
<h3>Derived types (scattered throughout different library headers)</h3>
<dl class="links"><dt><a href= "/reference/new/bad_alloc/"><b>bad_alloc</b></a></dt><dd>Exception thrown on failure allocating memory <span class="typ">(class)</span></dd></dl><dl class="links"><dt><a href= "/reference/typeinfo/bad_cast/"><b>bad_cast</b></a></dt><dd>Exception thrown on failure to dynamic cast <span class="typ">(class)</span></dd></dl><dl class="links"><dt><a href= "/reference/exception/bad_exception/"><b>bad_exception</b></a></dt><dd>Exception thrown by unexpected handler <span class="typ">(class)</span></dd></dl><dl class="links"><dt><a href= "/reference/functional/bad_function_call/"><b>bad_function_call <b class="C_cpp11" title="C++11 only"></b></b></a></dt><dd>Exception thrown on bad call <span class="typ">(class)</span></dd></dl><dl class="links"><dt><a href= "/reference/typeinfo/bad_typeid/"><b>bad_typeid</b></a></dt><dd>Exception thrown on typeid of null pointer <span class="typ">(class)</span></dd></dl><dl class="links"><dt><a href= "/reference/memory/bad_weak_ptr/"><b>bad_weak_ptr <b class="C_cpp11" title="C++11 only"></b></b></a></dt><dd>Bad weak pointer <span class="typ">(class)</span></dd></dl><dl class="links"><dt><a href= "/reference/ios/ios_base/failure/"><b>ios_base::failure</b></a></dt><dd>Base class for stream exceptions <span class="typ">(public member class)</span></dd></dl><dl class="links"><dt><a href= "/reference/stdexcept/logic_error/"><b>logic_error</b></a></dt><dd>Logic error exception <span class="typ">(class)</span></dd></dl><dl class="links"><dt><a href= "/reference/stdexcept/runtime_error/"><b>runtime_error</b></a></dt><dd>Runtime error exception <span class="typ">(class)</span></dd></dl>
<br>
Indirectly (through <samp><a href="/logic_error">logic_error</a></samp>):<br>
<dl class="links"><dt><a href= "/reference/stdexcept/domain_error/"><b>domain_error</b></a></dt><dd>Domain error exception <span class="typ">(class)</span></dd></dl><dl class="links"><dt><a href= "/reference/future/future_error/"><b>future_error <b class="C_cpp11" title="C++11 only"></b></b></a></dt><dd>Future error exception <span class="typ">(class)</span></dd></dl><dl class="links"><dt><a href= "/reference/stdexcept/invalid_argument/"><b>invalid_argument</b></a></dt><dd>Invalid argument exception <span class="typ">(class)</span></dd></dl><dl class="links"><dt><a href= "/reference/stdexcept/length_error/"><b>length_error</b></a></dt><dd>Length error exception <span class="typ">(class)</span></dd></dl><dl class="links"><dt><a href= "/reference/stdexcept/out_of_range/"><b>out_of_range</b></a></dt><dd>Out-of-range exception <span class="typ">(class)</span></dd></dl>
<br>
Indirectly (through <samp><a href="/runtime_error">runtime_error</a></samp>):<br>
<dl class="links"><dt><a href= "/reference/stdexcept/overflow_error/"><b>overflow_error</b></a></dt><dd>Overflow error exception <span class="typ">(class)</span></dd></dl><dl class="links"><dt><a href= "/reference/stdexcept/range_error/"><b>range_error</b></a></dt><dd>Range error exception <span class="typ">(class)</span></dd></dl><dl class="links"><dt><a href= "/reference/system_error/system_error/"><b>system_error <b class="C_cpp11" title="C++11 only"></b></b></a></dt><dd>System error exception <span class="typ">(class)</span></dd></dl><dl class="links"><dt><a href= "/reference/stdexcept/underflow_error/"><b>underflow_error</b></a></dt><dd>Underflow error exception <span class="typ">(class)</span></dd></dl>
<br>
Indirectly (through <samp><a href="/bad_alloc">bad_alloc</a></samp>):<br>
<dl class="links"><dt><a href= "/reference/new/bad_array_new_length/"><b>bad_array_new_length <b class="C_cpp11" title="C++11 only"></b></b></a></dt><dd>Exception on bad array length <span class="typ">(class)</span></dd></dl>
<br>
Indirectly (through <samp><a href="/system_error">system_error</a></samp>, since C++11):<br>
<dl class="links"><dt><a href= "/reference/ios/ios_base/failure/"><b>ios_base::failure</b></a></dt><dd>Base class for stream exceptions <span class="typ">(public member class)</span></dd></dl>
</section>
<br>
<section id="example">
<h3>Example</h3>
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br></code></pre></td>
<td class="source"><pre><code><cite>// exception example</cite>
<dfn>#include &lt;iostream&gt;       </dfn><cite>// std::cerr</cite>
<dfn>#include &lt;typeinfo&gt;       </dfn><cite>// operator typeid</cite>
<dfn>#include &lt;exception&gt;      </dfn><cite>// std::exception</cite>

<var>class</var> Polymorphic {<var>virtual</var> <var>void</var> member(){}};

<var>int</var> main () {
  <var>try</var>
  {
    Polymorphic * pb = 0;
    <var>typeid</var>(*pb);  <cite>// throws a bad_typeid exception</cite>
  }
  <var>catch</var> (std::exception&amp; e)
  {
    std::cerr &lt;&lt; <kbd>"exception caught: "</kbd> &lt;&lt; e.what() &lt;&lt; <kbd>'\n'</kbd>;
  }
  <var>return</var> 0;
}</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
<br>
Possible output:<br>
<div class="auto"><table class="snippet"><tr><td class="output"><pre><samp>
exception caught: St10bad_typeid
</samp></pre></td></tr></table></div>
</section></div><div id="CH_bb"></div></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="/">C++</a></b></h3>
<ul>
<li class="folder info"><a href="/info/">Information</a></li>
<li class="folder doc"><a href="/doc/">Tutorials</a></li>
<li class="folder selected reference"><a href="/reference/">Reference</a></li>
<li class="folder articles"><a href="/articles/">Articles</a></li>
<li class="folder forum"><a href="/forum/">Forum</a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect" id="reference_box">
<h3><b><a href="/reference/">Reference</a></b></h3>
<ul>
<li class="C_Collapsable collapsed"><h4><a href="/reference/clibrary/">C library:</a></h4><ul>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cassert/"><span>&lt;cassert&gt; (assert.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cctype/"><span>&lt;cctype&gt; (ctype.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cerrno/"><span>&lt;cerrno&gt; (errno.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cfenv/"><span>&lt;cfenv&gt; (fenv.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cfloat/"><span>&lt;cfloat&gt; (float.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cinttypes/"><span>&lt;cinttypes&gt; (inttypes.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/ciso646/"><span>&lt;ciso646&gt; (iso646.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/climits/"><span>&lt;climits&gt; (limits.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/clocale/"><span>&lt;clocale&gt; (locale.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cmath/"><span>&lt;cmath&gt; (math.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/csetjmp/"><span>&lt;csetjmp&gt; (setjmp.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/csignal/"><span>&lt;csignal&gt; (signal.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstdarg/"><span>&lt;cstdarg&gt; (stdarg.h)</span></a></li>
<li class="cpp11 folder"><a href="/reference/cstdbool/"><span>&lt;cstdbool&gt; (stdbool.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstddef/"><span>&lt;cstddef&gt; (stddef.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cstdint/"><span>&lt;cstdint&gt; (stdint.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstdio/"><span>&lt;cstdio&gt; (stdio.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstdlib/"><span>&lt;cstdlib&gt; (stdlib.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstring/"><span>&lt;cstring&gt; (string.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/ctgmath/"><span>&lt;ctgmath&gt; (tgmath.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/ctime/"><span>&lt;ctime&gt; (time.h)</span></a></li>
<li class="cpp11 folder"><a href="/reference/cuchar/"><span>&lt;cuchar&gt; (uchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cwchar/"><span>&lt;cwchar&gt; (wchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cwctype/"><span>&lt;cwctype&gt; (wctype.h)</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/stl/">Containers:</a></h4><ul>
<li class="cpp11 folder"><a href="/reference/array/"><span>&lt;array&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/deque/"><span>&lt;deque&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/forward_list/"><span>&lt;forward_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/list/"><span>&lt;list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/map/"><span>&lt;map&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/queue/"><span>&lt;queue&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/set/"><span>&lt;set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/stack/"><span>&lt;stack&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/unordered_map/"><span>&lt;unordered_map&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/unordered_set/"><span>&lt;unordered_set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/vector/"><span>&lt;vector&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/iolibrary/">Input/Output:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="/reference/fstream/"><span>&lt;fstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iomanip/"><span>&lt;iomanip&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/ios/"><span>&lt;ios&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iosfwd/"><span>&lt;iosfwd&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iostream/"><span>&lt;iostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/istream/"><span>&lt;istream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/ostream/"><span>&lt;ostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/sstream/"><span>&lt;sstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/streambuf/"><span>&lt;streambuf&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/multithreading/">Multi-threading:</a></h4><ul>
<li class="cpp11 folder"><a href="/reference/atomic/"><span>&lt;atomic&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/condition_variable/"><span>&lt;condition_variable&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/future/"><span>&lt;future&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/mutex/"><span>&lt;mutex&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/thread/"><span>&lt;thread&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4><a href="/reference/std/">Other:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="/reference/algorithm/"><span>&lt;algorithm&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/bitset/"><span>&lt;bitset&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/chrono/"><span>&lt;chrono&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/codecvt/"><span>&lt;codecvt&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/complex/"><span>&lt;complex&gt;</span></a></li>
<li class="cpp98 cpp11 selected folder"><a href="/reference/exception/"><span>&lt;exception&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/functional/"><span>&lt;functional&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/initializer_list/"><span>&lt;initializer_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iterator/"><span>&lt;iterator&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/limits/"><span>&lt;limits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/locale/"><span>&lt;locale&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/memory/"><span>&lt;memory&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/new/"><span>&lt;new&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/numeric/"><span>&lt;numeric&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/random/"><span>&lt;random&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/ratio/"><span>&lt;ratio&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/regex/"><span>&lt;regex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/stdexcept/"><span>&lt;stdexcept&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/string/"><span>&lt;string&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/system_error/"><span>&lt;system_error&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/tuple/"><span>&lt;tuple&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/typeindex/"><span>&lt;typeindex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/typeinfo/"><span>&lt;typeinfo&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/type_traits/"><span>&lt;type_traits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/utility/"><span>&lt;utility&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/valarray/"><span>&lt;valarray&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="exception_box">
<h3><b><a href="/reference/exception/">&lt;exception&gt;</a></b></h3>
<ul>
<li class="C_Collapsable"><h4>functions:</h4><ul>
<li class="cpp11"><a href="/reference/exception/current_exception/"><span>current_exception</span></a></li>
<li class="cpp11"><a href="/reference/exception/get_terminate/"><span>get_terminate</span></a></li>
<li class="cpp11"><a href="/reference/exception/get_unexpected/"><span>get_unexpected</span></a></li>
<li class="cpp11"><a href="/reference/exception/make_exception_ptr/"><span>make_exception_ptr</span></a></li>
<li class="cpp11"><a href="/reference/exception/rethrow_exception/"><span>rethrow_exception</span></a></li>
<li class="cpp11"><a href="/reference/exception/rethrow_if_nested/"><span>rethrow_if_nested</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/exception/set_terminate/"><span>set_terminate</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/exception/set_unexpected/"><span>set_unexpected</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/exception/terminate/"><span>terminate</span></a></li>
<li class="cpp11"><a href="/reference/exception/throw_with_nested/"><span>throw_with_nested</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/exception/uncaught_exception/"><span>uncaught_exception</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/exception/unexpected/"><span>unexpected</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>types:</h4><ul>
<li class="cpp98 cpp11"><a href="/reference/exception/bad_exception/"><span>bad_exception</span></a></li>
<li class="cpp98 cpp11 selected folder"><a href="/reference/exception/exception/"><span>exception</span></a></li>
<li class="cpp11"><a href="/reference/exception/exception_ptr/"><span>exception_ptr</span></a></li>
<li class="cpp11 folder"><a href="/reference/exception/nested_exception/"><span>nested_exception</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/exception/terminate_handler/"><span>terminate_handler</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/exception/unexpected_handler/"><span>unexpected_handler</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="exception_box">
<h3><b><a href="/reference/exception/exception/">exception</a></b></h3>
<ul>
<li class="C_Collapsable"><h4>member functions:</h4><ul>
<li class="cpp98 cpp11"><a href="/reference/exception/exception/exception/"><span>exception::exception</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/exception/exception/operator=/"><span>exception::operator=</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>virtual member functions:</h4><ul>
<li class="cpp98 cpp11"><a href="/reference/exception/exception/what/"><span>exception::what</span></a></li>
<li class="cpp98 cpp11"><a href="/reference/exception/exception/~exception/"><span>exception::~exception</span></a></li>
</ul></li>
</ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="/">Home page</a> | <a href="/privacy.do">Privacy policy</a><br>&copy; cplusplus.com, 2000-2016 - All rights reserved - <i>v3.1</i><br><a href="/contact.do?referrer=www.cplusplus.com%2Freference%2Fexception%2Fexception%2F">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
 onSession ( function(us) {
		el=document.getElementById('CH_bb'); el.innerHTML='';
		if (us.auth(4096)) {
			el.appendChild(btn('New Page','New Page','new','/reference/new.cgi?a=exception+exception'));
			el.appendChild(btn('Edit Page','Edit Page','edit','/reference/edit.cgi?a=exception+exception'));
			
		}
	});
	function docdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='/reference/delete.cgi?a=exception+exception'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>