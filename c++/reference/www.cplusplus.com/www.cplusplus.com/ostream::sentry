<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>ostream::sentry - C++ Reference</title>
<link rel="canonical" href="http://www.cplusplus.com/reference/ostream/ostream/sentry/">
<link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">
<link rel="stylesheet" type="text/css" href="/v321/main.css">
<script src="/v321/main.js" type="text/javascript"></script>
<script type='text/javascript'>
var googletag = googletag || {};
googletag.cmd = googletag.cmd || [];
(function() {
var gads = document.createElement('script');
gads.async = true;
gads.type = 'text/javascript';
var useSSL = 'https:' == document.location.protocol;
gads.src = (useSSL ? 'https:' : 'http:') + 
'//www.googletagservices.com/tag/js/gpt.js';
var node = document.getElementsByTagName('script')[0];
node.parentNode.insertBefore(gads, node);
})();
</script>

<script type='text/javascript'>
googletag.cmd.push(function() {
googletag.defineSlot('/32882001/L', [728, 90], 'div-gpt-ad-1427191279638-0').addService(googletag.pubads());
googletag.enableServices();
});
</script>
</head>
<body>
<div id="I_top">
<div id="I_header">
<div id="I_logo"><a href="/" title="cplusplus.com"><div></div></a></div>
<div id="I_search">
<form id="search" action="/search.do" method="get">
Search: <input name="q" size="20" class="txt"> <input type="submit" value="Go" class="btn">
</form>
</div>
<div id="I_bar">
<ul>
<li><a href="/reference/">Reference</a></li>
<li><a href="/reference/ostream/">&lt;ostream&gt;</a></li>
<li><a href="/reference/ostream/ostream/">ostream</a></li>
<li class="here">sentry</li>
</ul>
</div>
<div id="I_user" class="C_LoginBox"><span title="ajax"></span></div>
</div>
</div>
<div id="I_mid">
<div id="I_wrap">
<div id="I_minheight"></div>
<div id="I_main">
<div class="C_support">
<div id='div-gpt-ad-1427191279638-0' style='width:728px; height:90px;'>
<script type='text/javascript'>
googletag.cmd.push(function() { googletag.display('div-gpt-ad-1427191279638-0'); });
</script>
</div>
</div>
<div id="I_content">
<div class="C_doc">
<div id="I_type">public member class</div>
<div id="I_file">&lt;ostream&gt; &lt;iostream&gt;</div>
<h1><span class="namespace" title="namespace std">std::</span><a href="/reference/ostream/ostream/">ostream</a>::sentry</h1>
<div class="C_prototype"><pre>class sentry;</pre></div><div id="I_description">Prepare stream for output</div>
<section id="description">
Member class that performs a series of operations before and after each output operation:<br>
<br>
Its constructor performs the following operations on the stream object passed as its argument (in the same order):<br>
<ul>
<li>If any of its <i><a href="/ios::rdstate">internal error flags</a></i> is set, the function may set its <samp><a href="/ios_base::failbit">failbit</a></samp> flag and return.</li>
<li>If it is a <i><a href="/ios::tie">tied stream</a></i>, the function <i><a href="/ostream::flush">flushes</a></i> the stream it is tied to (if its output buffer is not empty), unless the function determines that synchronization is not necessary.<br>
On failure, it may set the <samp><a href="/ios_base::failbit">failbit</a></samp> flag.<br>
</li>
</ul>
<br>
Its destructor performs the following operations on the same stream object (in the same order):<br>
<ul>
<li>
<div class="C_SwitchCases">
<div title="C++98">
If the <samp><a href="/ios_base::unitbuf">unitbuf</a></samp> <i><a href="/ios_base::fmtflags">format flag</a></i> is set, and there are no <i><a href="/uncaught_exception">uncaught exceptions</a>, </i>the function <i><a href="/ostream::flush">flushes</a></i> the stream (as if calling <code><a href="/istream::rdbuf">rdbuf()</a>-&gt;<a href="/streambuf::pubsync">pubsync()</a></code>).<br>
</div>
<div title="C++11">
If the <samp><a href="/ios_base::unitbuf">unitbuf</a></samp> <i><a href="/ios_base::fmtflags">format flag</a></i> is set, and neither there are <i><a href="/uncaught_exception">uncaught exceptions</a></i> nor any <i><a href="/ios::rdstate">internal error flag</a></i> is set, the function <i><a href="/ostream::flush">flushes</a></i> the stream (by calling <code><a href="/istream::rdbuf">rdbuf()</a>-&gt;<a href="/streambuf::pubsync">pubsync()</a></code>).<br>
If this call to <samp><a href="/streambuf::pubsync">pubsync</a></samp> returns <code>-1</code>, the <samp><a href="/ios_base::badbit">badbit</a></samp> is set without propagating an exception (even if member <samp><a href="/ios::exceptions">exceptions</a></samp> has this flag set).<br>
</div>
</div>
</li>
</ul>
<br>
Implementations may use the construction and destruction of <samp>sentry</samp> objects to perform additional initialization or cleanup operations on the stream common to all output operations.<br>
<br>
All member functions that perform an output operation automatically construct an object of this class and then evaluate it (which returns <code>true</code> if no <i><a href="/ios::rdstate">state flag</a></i> was set). Only if this object evaluates to <code>true</code>, the function attempts the output operation (otherwise, it returns without performing it). Before returning, the function destroys the <samp>sentry</samp> object.<br>
<br>
The structure of this class is:<br>
<div class="C_SwitchCases">
<div title="C++98">
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br></code></pre></td>
<td class="source"><pre><code><var>class</var> sentry {
<var>public</var>:
  <var>explicit</var> sentry (ostream&amp; os);
  ~sentry();
  <var>operator</var> <var>bool</var>() <var>const</var>;
<var>private</var>:
  sentry (<var>const</var> sentry&amp;);             <cite>// not defined</cite>
  sentry&amp; <var>operator</var>= (<var>const</var> sentry&amp;);  <cite>// not defined</cite>
};</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
</div>
<div title="C++11">
<div class="auto"><table class="snippet"><tr><td class="rownum"><pre><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br></code></pre></td>
<td class="source"><pre><code><var>class</var> sentry {
<var>public</var>:
  <var>explicit</var> sentry (ostream&amp; os);
  ~sentry();
  <var>explicit</var> <var>operator</var> <var>bool</var>() <var>const</var>;
  sentry (<var>const</var> sentry&amp;) = <var>delete</var>;
  sentry&amp; <var>operator</var>= (<var>const</var> sentry&amp;) = <var>delete</var>;
};</code></pre></td><td class="C_btnholder"></td></tr></table></div>
<br>
</div>
</div>
</section>
<br>
<section id="parameters">
<h3>Members</h3>
<dl>
<dt>explicit sentry (ostream& os);</dt>
<dd>
Prepares the output stream for an output operation, performing the actions described above.<br>
</dd>
<dt>~sentry();</dt>
<dd>
Performs the operations described above.<br>
</dd>
<dt>explicit operator bool() const;</dt>
<dd>When the object is evaluated, it returns a <code>bool</code> value indicating whether the <samp>sentry</samp> constructor successfully performed all its tasks: If at some point of the construction process, an <i><a href="/ios::rdstate">internal error flags</a></i> was set, this function always returns <code>false</code> for that object.</dd>
</dl>
</section>
<br>
<section id="see">
<h3>See also</h3>
<dl class="links"><dt><a href= "/reference/ostream/ostream/operator<</"><b>ostream::operator&lt;&lt;</b></a></dt><dd>Insert formatted output <span class="typ">(public member function)</span></dd></dl>
</section></div><div id="CH_bb"></div></div>
</div>
<div id="I_nav">
<div class="sect root">
<h3><b><a href="/">C++</a></b></h3>
<ul>
<li class="folder info"><a href="/info/">Information</a></li>
<li class="folder doc"><a href="/doc/">Tutorials</a></li>
<li class="folder selected reference"><a href="/reference/">Reference</a></li>
<li class="folder articles"><a href="/articles/">Articles</a></li>
<li class="folder forum"><a href="/forum/">Forum</a></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect" id="reference_box">
<h3><b><a href="/reference/">Reference</a></b></h3>
<ul>
<li class="C_Collapsable collapsed"><h4><a href="/reference/clibrary/">C library:</a></h4><ul>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cassert/"><span>&lt;cassert&gt; (assert.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cctype/"><span>&lt;cctype&gt; (ctype.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cerrno/"><span>&lt;cerrno&gt; (errno.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cfenv/"><span>&lt;cfenv&gt; (fenv.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cfloat/"><span>&lt;cfloat&gt; (float.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cinttypes/"><span>&lt;cinttypes&gt; (inttypes.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/ciso646/"><span>&lt;ciso646&gt; (iso646.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/climits/"><span>&lt;climits&gt; (limits.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/clocale/"><span>&lt;clocale&gt; (locale.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cmath/"><span>&lt;cmath&gt; (math.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/csetjmp/"><span>&lt;csetjmp&gt; (setjmp.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/csignal/"><span>&lt;csignal&gt; (signal.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstdarg/"><span>&lt;cstdarg&gt; (stdarg.h)</span></a></li>
<li class="cpp11 folder"><a href="/reference/cstdbool/"><span>&lt;cstdbool&gt; (stdbool.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstddef/"><span>&lt;cstddef&gt; (stddef.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/cstdint/"><span>&lt;cstdint&gt; (stdint.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstdio/"><span>&lt;cstdio&gt; (stdio.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstdlib/"><span>&lt;cstdlib&gt; (stdlib.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cstring/"><span>&lt;cstring&gt; (string.h)</span></a></li>
<li class="c99 cpp11 folder"><a href="/reference/ctgmath/"><span>&lt;ctgmath&gt; (tgmath.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/ctime/"><span>&lt;ctime&gt; (time.h)</span></a></li>
<li class="cpp11 folder"><a href="/reference/cuchar/"><span>&lt;cuchar&gt; (uchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cwchar/"><span>&lt;cwchar&gt; (wchar.h)</span></a></li>
<li class="c90 c99 arm cpp98 cpp11 folder"><a href="/reference/cwctype/"><span>&lt;cwctype&gt; (wctype.h)</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/stl/">Containers:</a></h4><ul>
<li class="cpp11 folder"><a href="/reference/array/"><span>&lt;array&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/deque/"><span>&lt;deque&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/forward_list/"><span>&lt;forward_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/list/"><span>&lt;list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/map/"><span>&lt;map&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/queue/"><span>&lt;queue&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/set/"><span>&lt;set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/stack/"><span>&lt;stack&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/unordered_map/"><span>&lt;unordered_map&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/unordered_set/"><span>&lt;unordered_set&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/vector/"><span>&lt;vector&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4><a href="/reference/iolibrary/">Input/Output:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="/reference/fstream/"><span>&lt;fstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iomanip/"><span>&lt;iomanip&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/ios/"><span>&lt;ios&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iosfwd/"><span>&lt;iosfwd&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iostream/"><span>&lt;iostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/istream/"><span>&lt;istream&gt;</span></a></li>
<li class="cpp98 cpp11 selected folder"><a href="/reference/ostream/"><span>&lt;ostream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/sstream/"><span>&lt;sstream&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/streambuf/"><span>&lt;streambuf&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/multithreading/">Multi-threading:</a></h4><ul>
<li class="cpp11 folder"><a href="/reference/atomic/"><span>&lt;atomic&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/condition_variable/"><span>&lt;condition_variable&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/future/"><span>&lt;future&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/mutex/"><span>&lt;mutex&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/thread/"><span>&lt;thread&gt;</span></a></li>
</ul></li>
<li class="C_Collapsable collapsed"><h4><a href="/reference/std/">Other:</a></h4><ul>
<li class="cpp98 cpp11 folder"><a href="/reference/algorithm/"><span>&lt;algorithm&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/bitset/"><span>&lt;bitset&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/chrono/"><span>&lt;chrono&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/codecvt/"><span>&lt;codecvt&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/complex/"><span>&lt;complex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/exception/"><span>&lt;exception&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/functional/"><span>&lt;functional&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/initializer_list/"><span>&lt;initializer_list&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/iterator/"><span>&lt;iterator&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/limits/"><span>&lt;limits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/locale/"><span>&lt;locale&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/memory/"><span>&lt;memory&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/new/"><span>&lt;new&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/numeric/"><span>&lt;numeric&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/random/"><span>&lt;random&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/ratio/"><span>&lt;ratio&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/regex/"><span>&lt;regex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/stdexcept/"><span>&lt;stdexcept&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/string/"><span>&lt;string&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/system_error/"><span>&lt;system_error&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/tuple/"><span>&lt;tuple&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/typeindex/"><span>&lt;typeindex&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/typeinfo/"><span>&lt;typeinfo&gt;</span></a></li>
<li class="cpp11 folder"><a href="/reference/type_traits/"><span>&lt;type_traits&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/utility/"><span>&lt;utility&gt;</span></a></li>
<li class="cpp98 cpp11 folder"><a href="/reference/valarray/"><span>&lt;valarray&gt;</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect cpp98 cpp11" id="ostream_box">
<h3><b><a href="/reference/ostream/">&lt;ostream&gt;</a></b></h3>
<ul>
<li class="C_Collapsable"><h4>class templates:</h4><ul>
<li class="cpp98 cpp11 folder"><a href="/reference/ostream/basic_ostream/"><span>basic_ostream</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>classes:</h4><ul>
<li class="arm cpp98 cpp11 selected folder"><a href="/reference/ostream/ostream/"><span>ostream</span></a></li>
<li class="arm cpp98 cpp11"><a href="/reference/ostream/wostream/"><span>wostream</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>manipulators:</h4><ul>
<li class="arm cpp98 cpp11"><a href="/reference/ostream/endl/"><span>endl</span></a></li>
<li class="arm cpp98 cpp11"><a href="/reference/ostream/ends/"><span>ends</span></a></li>
<li class="arm cpp98 cpp11"><a href="/reference/ostream/flush-free/"><span>flush</span></a></li>
</ul></li>
</ul>
</div>
<div class="C_BoxLabels C_BoxSort sect arm cpp98 cpp11" id="ostream_box">
<h3><b><a href="/reference/ostream/ostream/">ostream</a></b></h3>
<ul>
<li class="arm cpp98 cpp11"><a href="/reference/ostream/ostream/ostream/"><span>ostream::ostream</span></a></li>
<li class="arm cpp98 cpp11"><a href="/reference/ostream/ostream/~ostream/"><span>ostream::~ostream</span></a></li>
<li class="C_Collapsable"><h4>member classes:</h4><ul>
<li class="arm cpp98 cpp11 selected"><a href="/reference/ostream/ostream/sentry/"><span>ostream::sentry</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>member functions:</h4><ul>
<li class="arm cpp98 cpp11"><a href="/reference/ostream/ostream/flush/"><span>ostream::flush</span></a></li>
<li class="arm cpp98 cpp11"><a href="/reference/ostream/ostream/operator<</"><span>ostream::operator&lt;&lt;</span></a></li>
<li class="arm cpp98 cpp11"><a href="/reference/ostream/ostream/put/"><span>ostream::put</span></a></li>
<li class="arm cpp98 cpp11"><a href="/reference/ostream/ostream/seekp/"><span>ostream::seekp</span></a></li>
<li class="arm cpp98 cpp11"><a href="/reference/ostream/ostream/tellp/"><span>ostream::tellp</span></a></li>
<li class="arm cpp98 cpp11"><a href="/reference/ostream/ostream/write/"><span>ostream::write</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>non-member overloads:</h4><ul>
<li class="arm cpp98 cpp11"><a href="/reference/ostream/ostream/operator-free/"><span>operator&lt;&lt; (ostream)</span></a></li>
</ul></li>
<li class="C_Collapsable"><h4>protected members:</h4><ul>
<li class="cpp11"><a href="/reference/ostream/ostream/operator=/"><span>ostream::operator=</span></a></li>
<li class="cpp11"><a href="/reference/ostream/ostream/swap/"><span>ostream::swap</span></a></li>
</ul></li>
</ul>
</div>
<div id="I_subnav"></div>
<div class="C_ad234">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-7688470879129516";
google_ad_slot = "7445514729";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div></div>
<div id="I_midclear"></div>
</div>
</div>
<div id="I_bottom">
<div id="I_footer">
	<a href="/">Home page</a> | <a href="/privacy.do">Privacy policy</a><br>&copy; cplusplus.com, 2000-2016 - All rights reserved - <i>v3.1</i><br><a href="/contact.do?referrer=www.cplusplus.com%2Freference%2Fostream%2Fostream%2Fsentry%2F">Spotted an error? contact us</a>
</div>
</div>

<script type="text/javascript">
<!--
 onSession ( function(us) {
		el=document.getElementById('CH_bb'); el.innerHTML='';
		if (us.auth(4096)) {
			
			el.appendChild(btn('Edit Page','Edit Page','edit','/reference/edit.cgi?a=ostream+ostream+sentry'));
			el.appendChild(btn('Delete Page','Delete Page','delete','javascript:docdel()'));
		}
	});
	function docdel() { if (confirm('WARNING: You are about to delete this page. Confirm?')) window.location='/reference/delete.cgi?a=ostream+ostream+sentry'; }
	ready();
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-521783-1']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

//-->
</script>

</body>
</html>